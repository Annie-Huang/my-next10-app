https://www.comparitech.com/net-admin/log-management-tools/
https://www.softwaretestinghelp.com/log-management-software/
https://www.trustradius.com/log-management?f=0

Keywords on search:
react app monitoring tools compare
monitor react app


https://geekflare.com/frontend-web-monitoring/
https://geekflare.com/cloud-apm/
https://sematext.com/blog/real-user-monitoring-tools/

https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js
https://github.com/getsentry/sentry-javascript
https://github.com/getsentry/sentry-javascript/tree/master/packages/nextjs
https://experienceleague.adobe.com/docs/experience-manager-cloud-manager/using/overview/customer-journey.html
https://stackshare.io/stackups/logrocket-vs-sentry
https://www.overops.com/blog/the-complete-guide-to-error-tracking-tools-rollbar-vs-raygun-vs-sentry-vs-airbrake-vs-bugsnag-vs-overops/#chapter2
https://rollbar.com/vs/sentry/


https://docs.sentry.io/platforms/javascript/guides/react/
https://docs.logrocket.com/docs
https://docs.logrocket.com/v1.0/reference#javascript-sdk-api
https://docs.rollbar.com/docs
https://github.com/rollbar/rollbar-react




https://kentcdodds.com/blog/react-production-performance-monitoring
Open Source Logging: Getting Started with Graylog Tutorial (https://www.youtube.com/watch?v=rtfj6W5X0YA)

############################################################################################################################################

Application Performance Management or Monitoring (APM) is essential for any web application to provide a better user experience.
Elastic Observability
Dynatrace
New Relic
App Dynamics
Datadog
IBM APM
Monitis
Scout App

----------------

Frontend application monitoring is the process of tracking errors, fixing them, and maintaining the health of web applications.
It is done to optimize user experience by removing any kind of error that could be harmful to your application.
You can catch errors at the initial stage, which would be easy for your developers to tackle. Subsequently, they can work on debugging and improving the code.

Don’t confuse it with application performance monitoring because it focuses on the ultimate result that users can see while opening your application.

Sentry
LogRocket
Rollbar
AppSignal
Raygun
Airbrake
Firebase


- Network request failure
    monitoring tools can record those HTTP requests and the responses initiated by the user to find the errors.
- Performance issues
    Some monitoring tools can also track app performance metrics, including average page loading time, time-to-first-paint, average server response time, and more.
- User experience problems
    (not sure how to monitor these) If a user performs “rage clicks” or clicks some elements quickly for multiple times, the tools can effectively monitor this. Additionally, they can also ensure elements are rendered correctly and detected when a user gets stuck in a certain navigation loop.

Sentry:
- $80/month for business package. Not sure for enterprice package.
- With Breadcrumbs, you can see the events leading to the errors, which helps you prioritize the bugs based on their possible impact on users and your business.
  Sentry tells you things you must know to detect errors and find them based on the overall context.
- The tool is capable of associating errors with a specific release.
  With the release feature, you can see when and who caused the bug or error to happen, and it also provides additional context such as commit data,
- This context also defines the error environment, i.e., language and operating system.

LogRocket:
- LogRocket lets you playback user sessions so you can see the pixel-perfect view of everything whatever your users can view in real-time.
- View network activity, including response and request. You can also inspect state and actions during a specific time along with JavaScript errors and console logs.
- LogRocket lets you track IP address and user-agent tracking for each session, which is also useful in providing information about what browser they are using and troubleshooting problems specific to their browsers.

Rollbar
- Rollbar automates triaging and error monitoring so developers could fix errors within minutes while building software painlessly.
- It provides real-time results in addition to stacking traces against local variables.

AppSignal
- The five types of monitoring
  Error tracking to detect error and ensure it doesn't repeat
  Performance monitoring to fine-tune your app
  Server monitoring to run healthy applications on optimal hardware
  Metric dashboards to collect real-time metrics and then visualize them in your dashboard
  Anomaly detection to set triggers plus receive alerts in case any of the metrics go wrong.

Airbrake
- It is a lightweight and simple tool that you can set up easily and get it running in no time.
- The moment an error occurs in your application, it notifies you with real-time alerts.
- Find the root cause of the error through Breadcrumbs and Backtraces that display the exact cause responsible for the error, simplifying its fixing.

New Relic:
- Application Monitoring – monitoring everything you need to understand the application performance & capacity. For ex:
  How much time take to load the page?
  What is the most time-consuming transaction?
  What is the throughput and error rate?
  Monitor critical transaction with breakdown and traceback
- Along with the monitoring, you can do thread profiling, use Java performance analyzer for performance-related troubleshooting.
- Database Monitoring – most likely, you will be using some database with your enterprise application, and you can do following out of the box with New Relic.
  Track the slow running queries
  How much time is spent on database requests?
  Visualize database operation
  Database call response time & throughput
- Alerting – alerting is essential for a production environment. With the help of New Relic, you can configure the alert policies to notify when a threshold is breached. You can integrate alerting with the channel such as email, Jira, Pager Duty, etc.

App Dynamics:
- (Backend code monitoring?) App Dynamics APM supports many platforms, including Java, Node.js, Apache HTTP, Python, PHP.

Datadog:
- It monitors full-stack, including application & infrastructure, to provide visibility at each layer of the stack.
- Datadog provides an advanced dashboard for visualizing the metrics matter to you. For ex;
  Latency
  Errors per second
  Hits per second
  CPU/Memory utilization


Checklist -->
- Check how good the dashboard of the tool is for analyzing information.
- Whether the tool includes an API reference or not
- Find out how many integrations the tool supports to keep using other apps and services.
- How deep the tool can trace the issues.
- Check whether the tool provides the option for on-premise.
- The tool must have good security features.
- The service provider must be offering quality technical support through multiple channels and 24/7 availability.
- Last but not least, pick the service in-line with your budget. For this, check multiple services, compare the offerings and pricing, and then go for the right combination.

The inclusion of a log message collector, a server, and a consolidator
The ability to create logfile names with meaningful structure and rotate them, opening new files periodically
The creation and maintenance of a log file directory structure
A data viewer that includes data analysis functions, such as filtering and sorting
Data portability
The offer of a free demo or trial for a no-cost assessment
A good deal that offers valuable services at a reasonable price

Questions to evaluation:
- price.
- platform that it run. (preferred window and Mac)
- have a dashboard.
- have easy called function and configuration for setup.
- can hook into alert system to trigger email/slack msg/sms when the threadhold is reached.
- able to track user steps to generate the error.
-

Questions to ask:
- How AppDynamic is installed into the app?
- Is it able to keep track of an error from frontend all the way to the backend log, e.g. if it's a backend problem?
- How do you use with splunk? To filter the log? What else do you use splunk for?
- What standard info is the dashboard provided?

- Is it able to catch runtime error?
- Do you catch api call error in the try{}catch{} block? What else do you logging in the application?

- Do you find it easy to use? What is the learning curve?
- How long do you guys keep the log, does it got erase when it reach certain max limit in size or passes xx days?
- Is the dev team actively monitor the log? Or another team? Is there alert triggered be setup? E.g. if pass X number of error per minute?
- Do we have an enterprise licence for these two tools? What is their technical support channels like? 24/7?
- What do you don't like about AppDynamic and Splunk and what feature you wish you have?
- Do you have experience using other tools before and what are they like?


============================================================================================



Datadog
    Windows,
    Mac,
    Linux,
    Debian,
    Ubuntu,
    CentOS,
    RedHat.

    On-premise and SaaS.

    Starts at $1.27 per million log events per month for the 7-day retention.


Splunk
    Windows,
    Mac,
    Linux,
    Solaris.

    On-Premises & SaaS.

    Free plan,
    Enterprise: $150 per ingested GB per month
    Cloud: Get a quote

sentry
logrocket
appDynamics,
Elastic


============================================
They consider monitoring as a part of their operational efforts, and they usually leave it to an Ops engineer or sysadmin
for that matter. It may not be a healthy practice as it overburdens them and might result in loopholes.


============================================
KDD owners, just follow up with our convo yesterday, could you please add these sections to your KDDs
Recommendation
 - this is the recommended option after comparison
 - recap some main reasons
Review
 - kindly ask for reviews by relevant stakeholders, eg. logging/monitoring - devops team, analytics - UI/UX team, ci/cd - devops team
Assumptions
 - if this KDD has been done based on a list of assumptions
Follow ups
 - if this KDD is approved, what are the follow up actions, eg. approach sentry for corporate licensing quote, implement approaved ci/cd, etc

============================================

First Contentful Paint - (here is a doc explaining what it is First Contentful Paint (FCP) ).
"The First Contentful Paint (FCP) metric measures the time from when the page starts loading to when any part of the page's content is rendered on the screen. For this metric, "content" refers to text, images (including background images), <svg> elements, or non-white <canvas> elements."

Largest Contentful Paint - (here is a doc explaining what it is Largest Contentful Paint (LCP)  ).
"Largest Contentful Paint (LCP) is an important, user-centric metric for measuring perceived load speed because it marks the point in the page load timeline when the page's main content has likely loaded—a fast LCP helps reassure the user that the page is useful."

Cumulative Layout Shift - (here is a doc explaining what it is Cumulative Layout Shift (CLS) ).
"Cumulative Layout Shift (CLS) is an important, user-centric metric for measuring visual stability because it helps quantify how often users experience unexpected layout shifts—a low CLS helps ensure that the page is delightful."

First Input Delay - (here is a doc explaining what it is https://web.dev/fid/).
"First Input Delay (FID) is an important, user-centric metric for measuring load responsiveness because it quantifies the experience users feel when trying to interact with unresponsive pages—a low FID helps ensure that the page is usable."


=====================================================================

How to use sentry:
----------------------
search 'next js with sentry project example' in google...
https://docs.sentry.io/platforms/javascript/guides/nextjs/
https://www.npmjs.com/package/@sentry/nextjs
https://github.com/getsentry/sentry-javascript
https://github.com/getsentry/sentry-javascript/tree/master/packages/nextjs      !!!!
/Users/ahuang23/projects/temp/sentry-javascript/packages/nextjs     <-- Global search sentry, it is forked the above directory
https://github.com/vercel/next.js/issues/8106
https://github.com/UnlyEd/next-right-now                          !!!!
https://www.programmersought.com/article/97774830952/
https://github.com/UnlyEd/next-typescript-api-zeit-boilerplate/blob/master/src/pages/api/date.ts


For people looking to implement Sentry with Next.js, make sure to check out https://github.com/UnlyEd/next-right-now
Interesting parts are:
https://github.com/UnlyEd/next-right-now/blob/master/src/utils/sentry.ts (Sentry config)
https://github.com/UnlyEd/next-right-now/blob/master/src/pages/_app.tsx (Various Sentry usage)
https://github.com/UnlyEd/next-right-now/blob/master/src/pages/index.tsx (Various Sentry usage)
https://github.com/UnlyEd/next-right-now/blob/master/src/pages/_error.tsx (Sentry to catch errors)
https://github.com/UnlyEd/next-right-now/blob/master/next.config.js#L60 (universal Sentry)

https://gist.github.com/mcdougal/7bf001417c3dc4b579da224b12776691
https://github.com/vercel/next.js/tree/canary/examples/with-sentry                !!!!
https://sentry.io/for/nextjs/       !!!!
https://github.com/vercel/next.js/issues/1852       <<< got a good entry from 'Vadorequest commented on 19 Dec 2020'

Questions:
- Is it able to just log information? does it only work if i log error?
        export function getServerSideProps() {
          throw new Error('SSR Test 1')
        }

-------
npm install --save @sentry/nextjs
npx @sentry/wizard -i nextjs

create sentry.client.config.js and sentry.server.config.js with the default Sentry.init
create next.config.js with the default configuration
create sentry.properties with configuration for sentry-cli (which is used when automatically uploading source maps)

--------

Sentry.configureScope(scope => {
  scope.setExtra('battery', 0.7);
  scope.setTag('user_mode', 'admin');
  scope.setUser({ id: '4711' });
  // scope.clear();
});

Sentry.setUser({ email: "john.doe@example.com" });
Sentry.configureScope(scope => scope.setUser(null));
Sentry.setTag("page_locale", "de-at");

Sentry.captureMessage('Hello, world!');
Sentry.captureException(new Error('Good bye'));
Sentry.captureEvent({
  message: 'Manual',
  stacktrace: [
    // ...
  ],
});

=====================================================================

How to use rollbar:
----------------------

https://docs.rollbar.com/docs/react     !!!!
https://docs.rollbar.com/docs/nodejs    !!!!
https://github.com/rollbar/rollbar-react    << As of April 2021, Rollbar has a new React library for React JS and React Native. Use the instructions found here to implement the newer library.
https://github.com/vercel/next.js/issues/1852


function installErrorHandler(app) {
  const _renderErrorToHTML = app.renderErrorToHTML.bind(app)
  const errorHandler = rollbar.errorHandler()

  app.renderErrorToHTML = (err, req, res, pathname, query) => {
    if (err) {
      errorHandler(err, req, res, () => {})
    }

    return _renderErrorToHTML(err, req, res, pathname, query)
  }

  return app
}


=====================================================================

Application Insight info:
------------------------------
https://azure.microsoft.com/en-us/search/?q=application+insight%2C+javascript&docsids=
https://docs.microsoft.com/en-us/azure/azure-monitor/app/javascript-react-plugin
https://docs.microsoft.com/en-us/azure/azure-monitor/app/nodejs
https://github.com/Azure-Samples/application-insights-react-demo
https://github.com/Azure-Samples/applicationinsights-mern-todo
https://docs.microsoft.com/en-us/azure/azure-monitor/app/api-custom-events-metrics
https://www.meziantou.net/website-performance-why-and-how-to-measure.htm



        import React from "react";
        import { AppInsightsContext } from "@microsoft/applicationinsights-react-js";
        import { reactPlugin } from "./AppInsights";

        const App = () => {
            return (
                <AppInsightsContext.Provider value={reactPlugin}>
                    /* your application here */
                </AppInsightsContext.Provider>
            );
        };

        import React from "react";
        import { useAppInsightsContext } from "@microsoft/applicationinsights-react-js";

        const MyComponent = () => {
            const appInsights = useAppInsightsContext();

            appInsights.trackMetric("Component 'MyComponent' is in use");

            return (
                <h1>My Component</h1>
            );
        }
        export default MyComponent;


useTrackMetric
The useTrackMetric Hook replicates the functionality of the withAITracking higher-order component, without adding an additional component to the component structure.
useTrackEvent       <<< this is for analytic...
The useTrackEvent Hook is used to track any custom event that an application may need to track, such as a button click or other API call. I

React Error Boundaries
        import React from "react";
        import { reactPlugin } from "./AppInsights";
        import { AppInsightsErrorBoundary } from "@microsoft/applicationinsights-react-js";

        const App = () => {
            return (
                <AppInsightsErrorBoundary onError={() => <h1>I believe something went wrong</h1>} appInsights={reactPlugin}>
                    /* app here */
                </AppInsightsErrorBoundary>
            );
        };


compare:
1. I don't like it need to specific appInsignts logging:
        function trackException() {
            appInsights.trackException({ error: new Error('some error'), severityLevel: SeverityLevel.Error });
        }

        function trackTrace() {
            appInsights.trackTrace({ message: 'some trace', severityLevel: SeverityLevel.Information });
        }

        function trackEvent() {
            appInsights.trackEvent({ name: 'some event' });
        }

where as sentry just do normal error logging:
        const Test3 = () => {
          useEffect(() => {
            throw new Error('Client Test 3')
          }, [])

          return <h1>Client Test 3</h1>
        }

        export default Test3


------------------------------


- More for end to end monitoring
- A bit of everything, frontend, backend, google analystic.
	request rater
	dependency reate
	exceptions
	page views
	load performance
	http(s) calls
	user and serssion counts
	performance coutners
	host diagnostics
	diagnostic trace logs
	custom event
- Our backend may not use application insight (col is using app dynamic and cdc is using new ralic)
- Not easy to get the performance matrix like first paint, first contentful paint, etc, may need to use the build-in Kuston Query Language (kql) todo the time subtraction to calculate times
- Need to use specific appInsignts function for exceptions:
        function trackException() {
            appInsights.trackException({ error: new Error('some error'), severityLevel: SeverityLevel.Error });
            throw new excpetion('new exception')
        }

        function trackTrace() {
            appInsights.trackTrace({ message: 'some trace', severityLevel: SeverityLevel.Information });
        }

        function trackEvent() {
            appInsights.trackEvent({ name: 'some event' });
        }

- If there is api error, backend can detect it (most of the time that is where the problem is, it's hardly only happens to one user so you don't need tracking from frontend to backend)
  If there is pure monitoring client side run time error, or checking matrix (first contentful paint), client side focus monitoring tools seems to be better at this.
  All the things that application insight currently doing (e.g. sourcemap and exception log capturing when run time happens) is able to be done in other tools as well.
  (How to use Azure Monitor to observe and diagnose a JavaScript error https://www.youtube.com/watch?v=RE0-gRSAU1o)
  e.g if a product is not adding into the shopping cart when i clicked app button, it's related is javascript synatax or logic problem, such data is not failed api call and will not log into backend. to capture the run time except, most of the tools is the same.
  however, a frontend focus tool tells you more information, e.g. video or info about series pages | element user clicked to get to the error.
  e.g. whether the image is too big to get delay the first contentful build, (but not crashing the app). (Application insight will give a time slot from query calculation, But its in the dashboard in sentry and we can directly compare with the standard given by google.



============================================
[4:25 pm] Keith Maine
    Annie, you need to be more specific. We do use - appDynamics  within Coles for some websites, speak to Markus Blaser to get a full run down on whether this provides what you require since you mention client side - which I'm sure AppD could do. There are Adobe tools that can provide device information etc which are in use - see Jacob Toy. Again, more info required.

Christinique Chapman: BA

Max Paik: BFF team
- AEM and Use application insights
  https://experienceleague.adobe.com/docs/experience-manager-cloud-manager/using/overview/customer-journey.html
Max Paik: said they use AEM for user journey and azure application insight for logging

Steven Corral: Patrik's boss...


##########
## COL  ##
##########
Jordon scott, referrenced by Tarik Wahid (insight team)
- Chandramohan Kkrishnamoorthi is the dev support team in col team          <<< Easy to talk with
- Saurabh Gupta is the dev support team in col team

Ashish Kaul, manager in charge of col DEV team.
Rahul Semwal is the frontend dev in col team                                         <<< Easy to talk with
Sebastian Castro and Yagnesh Rajaraman  are the architects
satinder.kumar, vinod.valluri are the testing managers              >>>> Waiting for reply....
Neeraj Rana is the automation tester
- col is using angular1, also got jsp page. appdynamic, splunk for backend monitoring.


##########
## CDC  ##
##########
Matthew Kingston or Divya Sri Thodangi, frontend dev of the cdc team.       <<< Easy to talk with
- cdc is using react, New Relic for backend monitoring.
@Surender Singh is doing everything for cdc team...                         <<< Easy to talk with
Pavan Andiboyina is the QA from cdc team                            >>>> Waiting for reply....

Pavan's proxy setup:
npm config set proxy http://username:password@proxy.cmltd.net.au:8080
npm config set https-proxy http://username:password@proxy.cmltd.net.au:8080
SET HTTP_PROXY=proxy.cmltd.net.au:8080
SET HTTP_PROXY_PASSWORD=password
SET HTTP_PROXY_USER=username
SET HTTPS_PROXY=proxy.cmltd.net.au:8080
SET HTTPS_PROXY_PASSWORD=password
SET HTTPS_PROXY_USER=username
================================================================

Question 1:
Question @Annie Huang does Sentry provide a view of page performance over a given time period (e.g. week, month

Question 2:
can we find out where is sentry's server? location of storing data, will there be any sensitive data stored? like user IP

Question 3:
nextjs does have a node server
where we can install app dynamics agent
the question would be can nodejs server install appdynamic agent?
Answers:
Yes, it can
- https://docs.appdynamics.com/21.5/en/application-monitoring/install-app-server-agents/node-js-agent

Question 4:
so follow up action, i see you 've included legal, architects suggests more secuirty concern


================================================================

Question to ask for Sentry:
- Who is the biggest ecommerce | corporate clients that use the NextJS framework?
- Can we see performance on a page (first contentful paint etc web vital) against two given time period?
- What is the dropdown list for the timeframe for the performances (last 14 days one)
-













